{% extends "parts/base" %}
{%- block title -%}
	Download
{%- endblock %}
{% block content %}

<p>
	You want to try out <span class="algo">Firm</span>?
	<span class="algo">Firm</span> itself is just a library, so you probably want our C frontend <tt>cparser</tt> as well.
</p>

<h2 id="Git">Git</h2>
<p>Check it out with git:
</p>
{% code 'bash' %}
$ git clone --recursive http://pp.ipd.kit.edu/git/cparser.git
{% endcode %}
<p>This will download cparser and recursively the <span class="algo">Firm</span> library.</p>
<p>Now build everything. You need a C compiler, GNU Make, Perl, and Python.</p>
{% code 'bash' %}
$ cd cparser
$ make
{% endcode %}
<p>Now you should have a working binary.</p>
{% code 'bash' %}
$ build/debug/cparser --version
{% endcode %}

<h3 id="Usage">Usage</h3>
<p>Our compiler tries to be a drop in replacement for GCC, so it supports the same arguments. Make it accesible through your PATH environment variable (we tend to create a symlink of build/debug/cparser into $HOME/.local/bin here which is in our PATH).</p>
<p>Try it on some C99 code, like <tt>cparser -Wall -O3 test.c</tt> or <tt>CC=cparser make</tt> on a project with a Makefile.
</p>
<p>
	Note that on 64-bit systems, you have to additionally pass <tt>-m32</tt> because <tt>cparser</tt> generates 32-bit code by default.
</p>
<p>If you find bugs, please report them in our <a class="external text" href="http://pp.ipd.kit.edu/~firm/bugs/">issue tracker</a>.
</p>

{% endblock %}
