{% extends "parts/base" %}
{% block title %}Firm By Example{% endblock %}
{% block content %}

<p><b>Attention:</b> The following graph snippets are for the latest revision in
the git repository. The last stable release may require slightly different
graphs.</p>

<h2>Basic Operations</h2>

<h3>Simple Arithmetic with Constants</h3>
{% code 'c' %}
5 + 3
{% endcode %}
<div class="figure">
	<img src="simpleadd.svg"/>
</div>

<h3>Load, Arithmetic, Multiple Users</h3>
{% code 'c' %}
x*x - 2
{% endcode %}
<div class="figure">
	<img src="load_mul.svg"/>
</div>

<h3>Calls, Sequencing with Memory Value</h3>
{% code 'c' %}
print_int(7);
print_int(4);
{% endcode %}
<div class="figure">
	<img src="twocalls.svg"/>
</div>

<h3>Compound Member access</h3>
{% code 'c' %}
x.z
{% endcode %}
<div class="figure">
	<img src="member.svg"/>
</div>

<h2>Control Flow</h2>

<h3>Jump</h3>
{% code 'c' %}
goto a;
a:
{% endcode %}
<div class="figure">
	<img src="jump.svg"/>
</div>

<h3>Comparison / Conditional Jump</h3>
{% code 'c' %}
if (1 == 0) {
	return 4;
} else {
	return 7;
}
{% endcode %}
<div class="figure">
	<img src="condjump.svg"/>
</div>

<h3>Conditional Jump / Phi</h3>
{% code 'c' %}
int x;
if (7 > 4) {
	x = 9;
} else {
	x = 3;
}
return x;
{% endcode %}
<div class="figure">
	<img src="phi.svg"/>
</div>

<h3>Simple Loop</h3>
{% code 'c' %}
int i = 0;
do {
	i = i + 1;
} while (i < 100);
{% endcode %}
<div class="figure">
	<img src="loop.svg"/>
</div>

<h2>Function Begin/Return</h2>

<h3>Start + Return + End</h3>
{% code 'c' %}
void empty(void)
{
}
{% endcode %}
<div class="figure">
	<img src="start_return.svg"/>
</div>

<h3>Parameters</h3>
{% code 'c' %}
int add(int x, int y)
{
	return x + y;
}
{% endcode %}
<div class="figure">
	<img src="params.svg"/>
</div>

{% endblock %}
